# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../components/form/form_events.rst:5
#: ../../components/form/form_events.rst:1
msgid "Form Events"
msgstr ""

#: ../../components/form/form_events.rst:7
msgid ""
"The Form component provides a structured process to let you customize your "
"forms, by making use of the :doc:`EventDispatcher "
"</components/event_dispatcher/introduction>` component. Using form events, "
"you may modify information or fields at different steps of the workflow: "
"from the population of the form to the submission of the data from the "
"request."
msgstr ""

#: ../../components/form/form_events.rst:13
msgid "Registering an event listener is very easy using the Form component."
msgstr ""

#: ../../components/form/form_events.rst:15
msgid ""
"For example, if you wish to register a function to the "
"``FormEvents::PRE_SUBMIT`` event, the following code lets you add a field, "
"depending on the request values::"
msgstr ""

#: ../../components/form/form_events.rst:35
msgid "The Form Workflow"
msgstr ""

#: ../../components/form/form_events.rst:38
msgid "The Form Submission Workflow"
msgstr ""

#: ../../components/form/form_events.rst:44
msgid ""
"1) Pre-populating the Form (``FormEvents::PRE_SET_DATA`` and "
"``FormEvents::POST_SET_DATA``)"
msgstr ""

#: ../../components/form/form_events.rst:49
msgid ""
"Two events are dispatched during pre-population of a form, when "
":method:`Form::setData() <Symfony\\\\Component\\\\Form\\\\Form::setData>` is"
" called: ``FormEvents::PRE_SET_DATA`` and ``FormEvents::POST_SET_DATA``."
msgstr ""

#: ../../components/form/form_events.rst:54
msgid "A) The ``FormEvents::PRE_SET_DATA`` Event"
msgstr ""

#: ../../components/form/form_events.rst:56
msgid ""
"The ``FormEvents::PRE_SET_DATA`` event is dispatched at the beginning of the"
" ``Form::setData()`` method. It can be used to:"
msgstr ""

#: ../../components/form/form_events.rst:59
msgid "Modify the data given during pre-population;"
msgstr ""

#: ../../components/form/form_events.rst:60
msgid ""
"Modify a form depending on the pre-populated data (adding or removing fields"
" dynamically)."
msgstr ""

#: ../../components/form/form_events.rst:62
#: ../../components/form/form_events.rst:97
#: ../../components/form/form_events.rst:140
#: ../../components/form/form_events.rst:168
#: ../../components/form/form_events.rst:198
msgid ":ref:`Form Events Information Table<component-form-event-table>`"
msgstr ""

#: ../../components/form/form_events.rst:65
#: ../../components/form/form_events.rst:100
#: ../../components/form/form_events.rst:143
#: ../../components/form/form_events.rst:171
#: ../../components/form/form_events.rst:201
msgid "Data Type"
msgstr ""

#: ../../components/form/form_events.rst:65
#: ../../components/form/form_events.rst:100
#: ../../components/form/form_events.rst:143
#: ../../components/form/form_events.rst:171
#: ../../components/form/form_events.rst:201
msgid "Value"
msgstr ""

#: ../../components/form/form_events.rst:67
#: ../../components/form/form_events.rst:102
#: ../../components/form/form_events.rst:145
#: ../../components/form/form_events.rst:173
#: ../../components/form/form_events.rst:203
#: ../../components/form/form_events.rst:244
#: ../../components/form/form_events.rst:245
msgid "Model data"
msgstr ""

#: ../../components/form/form_events.rst:67
#: ../../components/form/form_events.rst:68
#: ../../components/form/form_events.rst:69
msgid "``null``"
msgstr ""

#: ../../components/form/form_events.rst:68
#: ../../components/form/form_events.rst:103
#: ../../components/form/form_events.rst:146
#: ../../components/form/form_events.rst:174
#: ../../components/form/form_events.rst:204
#: ../../components/form/form_events.rst:247
msgid "Normalized data"
msgstr ""

#: ../../components/form/form_events.rst:69
#: ../../components/form/form_events.rst:104
#: ../../components/form/form_events.rst:147
#: ../../components/form/form_events.rst:175
#: ../../components/form/form_events.rst:205
#: ../../components/form/form_events.rst:248
msgid "View data"
msgstr ""

#: ../../components/form/form_events.rst:74
msgid ""
"During ``FormEvents::PRE_SET_DATA``, :method:`Form::setData() "
"<Symfony\\\\Component\\\\Form\\\\Form::setData>` is locked and will throw an"
" exception if used. If you wish to modify data, you should use "
":method:`FormEvent::setData() "
"<Symfony\\\\Component\\\\Form\\\\FormEvent::setData>` instead."
msgstr ""

#: ../../components/form/form_events.rst:0
msgid "``FormEvents::PRE_SET_DATA`` in the Form component"
msgstr ""

#: ../../components/form/form_events.rst:83
msgid ""
"The ``collection`` form type relies on the "
"``Symfony\\Component\\Form\\Extension\\Core\\EventListener\\ResizeFormListener``"
" subscriber, listening to the ``FormEvents::PRE_SET_DATA`` event in order to"
" reorder the form's fields depending on the data from the pre-populated "
"object, by removing and adding all form rows."
msgstr ""

#: ../../components/form/form_events.rst:90
msgid "B) The ``FormEvents::POST_SET_DATA`` Event"
msgstr ""

#: ../../components/form/form_events.rst:92
msgid ""
"The ``FormEvents::POST_SET_DATA`` event is dispatched at the end of the "
":method:`Form::setData() <Symfony\\\\Component\\\\Form\\\\Form::setData>` "
"method. This event is mostly here for reading data after having pre-"
"populated the form."
msgstr ""

#: ../../components/form/form_events.rst:102
msgid "Model data injected into ``setData()``"
msgstr ""

#: ../../components/form/form_events.rst:103
msgid "Model data transformed using a model transformer"
msgstr ""

#: ../../components/form/form_events.rst:104
#: ../../components/form/form_events.rst:205
msgid "Normalized data transformed using a view transformer"
msgstr ""

#: ../../components/form/form_events.rst:0
msgid "``FormEvents::POST_SET_DATA`` in the Form component"
msgstr ""

#: ../../components/form/form_events.rst:109
#: ../../components/form/form_events.rst:214
msgid "The data collector extension was introduced in Symfony 2.4."
msgstr ""

#: ../../components/form/form_events.rst:112
msgid ""
"The "
"``Symfony\\Component\\Form\\Extension\\DataCollector\\EventListener\\DataCollectorListener``"
" class is subscribed to listen to the ``FormEvents::POST_SET_DATA`` event in"
" order to collect information about the forms from the denormalized model "
"and view data."
msgstr ""

#: ../../components/form/form_events.rst:118
msgid ""
"2) Submitting a Form (``FormEvents::PRE_SUBMIT``, ``FormEvents::SUBMIT`` and"
" ``FormEvents::POST_SUBMIT``)"
msgstr ""

#: ../../components/form/form_events.rst:123
msgid ""
"Three events are dispatched when :method:`Form::handleRequest() "
"<Symfony\\\\Component\\\\Form\\\\Form::handleRequest>` or "
":method:`Form::submit() <Symfony\\\\Component\\\\Form\\\\Form::submit>` are "
"called: ``FormEvents::PRE_SUBMIT``, ``FormEvents::SUBMIT``, "
"``FormEvents::POST_SUBMIT``."
msgstr ""

#: ../../components/form/form_events.rst:130
msgid "A) The ``FormEvents::PRE_SUBMIT`` Event"
msgstr ""

#: ../../components/form/form_events.rst:132
msgid ""
"The ``FormEvents::PRE_SUBMIT`` event is dispatched at the beginning of the "
":method:`Form::submit() <Symfony\\\\Component\\\\Form\\\\Form::submit>` "
"method."
msgstr ""

#: ../../components/form/form_events.rst:135
msgid "It can be used to:"
msgstr ""

#: ../../components/form/form_events.rst:137
msgid "Change data from the request, before submitting the data to the form;"
msgstr ""

#: ../../components/form/form_events.rst:138
msgid "Add or remove form fields, before submitting the data to the form."
msgstr ""

#: ../../components/form/form_events.rst:145
#: ../../components/form/form_events.rst:146
#: ../../components/form/form_events.rst:147
#: ../../components/form/form_events.rst:173
#: ../../components/form/form_events.rst:175
msgid "Same as in ``FormEvents::POST_SET_DATA``"
msgstr ""

#: ../../components/form/form_events.rst:0
msgid "``FormEvents::PRE_SUBMIT`` in the Form component"
msgstr ""

#: ../../components/form/form_events.rst:152
msgid ""
"The "
"``Symfony\\Component\\Form\\Extension\\Core\\EventListener\\TrimListener`` "
"subscriber subscribes to the ``FormEvents::PRE_SUBMIT`` event in order to "
"trim the request's data (for string values). The "
"``Symfony\\Component\\Form\\Extension\\Csrf\\EventListener\\CsrfValidationListener``"
" subscriber subscribes to the ``FormEvents::PRE_SUBMIT`` event in order to "
"validate the CSRF token."
msgstr ""

#: ../../components/form/form_events.rst:160
msgid "B) The ``FormEvents::SUBMIT`` Event"
msgstr ""

#: ../../components/form/form_events.rst:162
msgid ""
"The ``FormEvents::SUBMIT`` event is dispatched just before the "
":method:`Form::submit() <Symfony\\\\Component\\\\Form\\\\Form::submit>` "
"method transforms back the normalized data to the model and view data."
msgstr ""

#: ../../components/form/form_events.rst:166
msgid ""
"It can be used to change data from the normalized representation of the "
"data."
msgstr ""

#: ../../components/form/form_events.rst:174
msgid ""
"Data from the request reverse-transformed from the request using a view "
"transformer"
msgstr ""

#: ../../components/form/form_events.rst:180
#: ../../components/form/form_events.rst:210
msgid "At this point, you cannot add or remove fields to the form."
msgstr ""

#: ../../components/form/form_events.rst:0
msgid "``FormEvents::SUBMIT`` in the Form component"
msgstr ""

#: ../../components/form/form_events.rst:184
msgid ""
"The "
"``Symfony\\Component\\Form\\Extension\\Core\\EventListener\\ResizeFormListener``"
" subscribes to the ``FormEvents::SUBMIT`` event in order to remove the "
"fields that need to be removed whenever manipulating a collection of forms "
"for which ``allow_delete`` has been enabled."
msgstr ""

#: ../../components/form/form_events.rst:190
msgid "C) The ``FormEvents::POST_SUBMIT`` Event"
msgstr ""

#: ../../components/form/form_events.rst:192
msgid ""
"The ``FormEvents::POST_SUBMIT`` event is dispatched after the "
":method:`Form::submit() <Symfony\\\\Component\\\\Form\\\\Form::submit>` once"
" the model and view data have been denormalized."
msgstr ""

#: ../../components/form/form_events.rst:196
msgid "It can be used to fetch data after denormalization."
msgstr ""

#: ../../components/form/form_events.rst:203
msgid "Normalized data reverse-transformed using a model transformer"
msgstr ""

#: ../../components/form/form_events.rst:204
msgid "Same as in ``FormEvents::POST_SUBMIT``"
msgstr ""

#: ../../components/form/form_events.rst:0
msgid "``FormEvents::POST_SUBMIT`` in the Form component"
msgstr ""

#: ../../components/form/form_events.rst:217
msgid ""
"The "
"``Symfony\\Component\\Form\\Extension\\DataCollector\\EventListener\\DataCollectorListener``"
" subscribes to the ``FormEvents::POST_SUBMIT`` event in order to collect "
"information about the forms. The "
"``Symfony\\Component\\Form\\Extension\\Validator\\EventListener\\ValidationListener``"
" subscribes to the ``FormEvents::POST_SUBMIT`` event in order to "
"automatically validate the denormalized object, and update the normalized as"
" well as the view's representations."
msgstr ""

#: ../../components/form/form_events.rst:226
msgid "Registering Event Listeners or Event Subscribers"
msgstr ""

#: ../../components/form/form_events.rst:228
msgid ""
"In order to be able to use Form events, you need to create an event listener"
" or an event subscriber, and register it to an event."
msgstr ""

#: ../../components/form/form_events.rst:231
msgid ""
"The name of each of the \"form\" events is defined as a constant on the "
":class:`Symfony\\\\Component\\\\Form\\\\FormEvents` class. Additionally, "
"each event callback (listener or subscriber method) is passed a single "
"argument, which is an instance of "
":class:`Symfony\\\\Component\\\\Form\\\\FormEvent`. The event object "
"contains a reference to the current state of the form, and the current data "
"being processed."
msgstr ""

#: ../../components/form/form_events.rst:242
msgid "Name"
msgstr ""

#: ../../components/form/form_events.rst:242
msgid "``FormEvents`` Constant"
msgstr ""

#: ../../components/form/form_events.rst:242
msgid "Event's Data"
msgstr ""

#: ../../components/form/form_events.rst:244
msgid "``form.pre_set_data``"
msgstr ""

#: ../../components/form/form_events.rst:244
msgid "``FormEvents::PRE_SET_DATA``"
msgstr ""

#: ../../components/form/form_events.rst:245
msgid "``form.post_set_data``"
msgstr ""

#: ../../components/form/form_events.rst:245
msgid "``FormEvents::POST_SET_DATA``"
msgstr ""

#: ../../components/form/form_events.rst:246
msgid "``form.pre_bind``"
msgstr ""

#: ../../components/form/form_events.rst:246
msgid "``FormEvents::PRE_SUBMIT``"
msgstr ""

#: ../../components/form/form_events.rst:246
msgid "Request data"
msgstr ""

#: ../../components/form/form_events.rst:247
msgid "``form.bind``"
msgstr ""

#: ../../components/form/form_events.rst:247
msgid "``FormEvents::SUBMIT``"
msgstr ""

#: ../../components/form/form_events.rst:248
msgid "``form.post_bind``"
msgstr ""

#: ../../components/form/form_events.rst:248
msgid "``FormEvents::POST_SUBMIT``"
msgstr ""

#: ../../components/form/form_events.rst:251
msgid ""
"Before Symfony 2.3, ``FormEvents::PRE_SUBMIT``, ``FormEvents::SUBMIT`` and "
"``FormEvents::POST_SUBMIT`` were called ``FormEvents::PRE_BIND``, "
"``FormEvents::BIND`` and ``FormEvents::POST_BIND``."
msgstr ""

#: ../../components/form/form_events.rst:258
msgid ""
"The ``FormEvents::PRE_BIND``, ``FormEvents::BIND`` and "
"``FormEvents::POST_BIND`` constants will be removed in version 3.0 of "
"Symfony. The event names still keep their original values, so make sure you "
"use the ``FormEvents`` constants in your code for forward compatibility."
msgstr ""

#: ../../components/form/form_events.rst:265
msgid "Event Listeners"
msgstr ""

#: ../../components/form/form_events.rst:267
msgid "An event listener may be any type of valid callable."
msgstr ""

#: ../../components/form/form_events.rst:269
msgid "Creating and binding an event listener to the form is very easy::"
msgstr ""

#: ../../components/form/form_events.rst:301
msgid ""
"When you have created a form type class, you can use one of its methods as a"
" callback for better readability::"
msgstr ""

#: ../../components/form/form_events.rst:325
msgid "Event Subscribers"
msgstr ""

#: ../../components/form/form_events.rst:327
msgid "Event subscribers have different uses:"
msgstr ""

#: ../../components/form/form_events.rst:329
msgid "Improving readability;"
msgstr ""

#: ../../components/form/form_events.rst:330
msgid "Listening to multiple events;"
msgstr ""

#: ../../components/form/form_events.rst:331
msgid "Regrouping multiple listeners inside a single class."
msgstr ""

#: ../../components/form/form_events.rst:382
msgid ""
"To register the event subscriber, use the addEventSubscriber() method::"
msgstr ""

#: ../../components/form/form_events.rst:1
msgid "Forms"
msgstr ""
