# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../components/security/secure_tools.rst:2
msgid "Securely Comparing Strings and Generating Random Numbers"
msgstr ""

#: ../../components/security/secure_tools.rst:4
msgid ""
"The Symfony Security component comes with a collection of nice utilities "
"related to security. These utilities are used by Symfony, but you should "
"also use them if you want to solve the problem they address."
msgstr ""

#: ../../components/security/secure_tools.rst:9
msgid "Comparing Strings"
msgstr ""

#: ../../components/security/secure_tools.rst:11
msgid ""
"The time it takes to compare two strings depends on their differences. This "
"can be used by an attacker when the two strings represent a password for "
"instance; it is known as a `Timing attack`_."
msgstr ""

#: ../../components/security/secure_tools.rst:15
msgid ""
"Internally, when comparing two passwords, Symfony uses a constant-time "
"algorithm; you can use the same strategy in your own code thanks to the "
":class:`Symfony\\\\Component\\\\Security\\\\Core\\\\Util\\\\StringUtils` "
"class::"
msgstr ""

#: ../../components/security/secure_tools.rst:26
msgid ""
"To avoid timing attacks, the known string must be the first argument and the"
" user-entered string the second."
msgstr ""

#: ../../components/security/secure_tools.rst:30
msgid "Generating a Secure random Number"
msgstr ""

#: ../../components/security/secure_tools.rst:32
msgid ""
"Whenever you need to generate a secure random number, you are highly "
"encouraged to use the Symfony "
":class:`Symfony\\\\Component\\\\Security\\\\Core\\\\Util\\\\SecureRandom` "
"class::"
msgstr ""

#: ../../components/security/secure_tools.rst:41
msgid ""
"The "
":method:`Symfony\\\\Component\\\\Security\\\\Core\\\\Util\\\\SecureRandom::nextBytes`"
" method returns a random string composed of the number of characters passed "
"as an argument (10 in the above example)."
msgstr ""

#: ../../components/security/secure_tools.rst:46
msgid ""
"The SecureRandom class works better when OpenSSL is installed. But when it's"
" not available, it falls back to an internal algorithm, which needs a seed "
"file to work correctly. Just pass a file name to enable it::"
msgstr ""

#: ../../components/security/secure_tools.rst:57
msgid ""
"If you're using the Symfony Framework, you can access a secure random "
"instance directly from the container: its name is "
"``security.secure_random``."
msgstr ""
