# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/constraints/UniqueEntity.rst:2
msgid "UniqueEntity"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:4
msgid ""
"Validates that a particular field (or fields) in a Doctrine entity is (are) "
"unique. This is commonly used, for example, to prevent a new user to "
"register using an email address that already exists in the system."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:9
msgid "Applies to"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:9
msgid ":ref:`class <validation-class-target>`"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:11
#: ../../reference/constraints/UniqueEntity.rst:114
msgid "Options"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:11
msgid "`fields`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:12
msgid "`message`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:13
msgid "`em`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:14
msgid "`repositoryMethod`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:15
msgid "`errorPath`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:16
msgid "`ignoreNull`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:17
msgid "`payload`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:19
msgid "Class"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:19
msgid ":class:`Symfony\\\\Bridge\\\\Doctrine\\\\Validator\\\\Constraints\\\\UniqueEntity`"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:21
msgid "Validator"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:21
msgid ""
":class:`Symfony\\\\Bridge\\\\Doctrine\\\\Validator\\\\Constraints\\\\UniqueEntityValidator`"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:25
msgid "Basic Usage"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:27
msgid ""
"Suppose you have an AcmeUserBundle bundle with a ``User`` entity that has an"
" ``email`` field. You can use the ``UniqueEntity`` constraint to guarantee "
"that the ``email`` field remains unique between all of the constraints in "
"your user table:"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:117
msgid "fields"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:119
msgid ""
"**type**: ``array`` | ``string`` [:ref:`default option <validation-default-"
"option>`]"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:121
msgid ""
"This required option is the field (or list of fields) on which this entity "
"should be unique. For example, if you specified both the ``email`` and "
"``name`` field in a single ``UniqueEntity`` constraint, then it would "
"enforce that the combination value where unique (e.g. two users could have "
"the same email, as long as they don't have the same name also)."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:127
msgid ""
"If you need to require two fields to be individually unique (e.g. a unique "
"``email`` *and* a unique ``username``), you use two ``UniqueEntity`` "
"entries, each with a single field."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:132
msgid "message"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:134
msgid "**type**: ``string`` **default**: ``This value is already used.``"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:136
msgid "The message that's displayed when this constraint fails."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:139
msgid "em"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:141
msgid "**type**: ``string``"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:143
msgid ""
"The name of the entity manager to use for making the query to determine the "
"uniqueness. If it's left blank, the correct entity manager will be "
"determined for this class. For that reason, this option should probably not "
"need to be used."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:149
msgid "repositoryMethod"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:151
msgid "**type**: ``string`` **default**: ``findBy``"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:153
msgid ""
"The name of the repository method to use for making the query to determine "
"the uniqueness. If it's left blank, the ``findBy`` method will be used. This"
" method should return a countable result."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:158
msgid "errorPath"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:160
msgid ""
"**type**: ``string`` **default**: The name of the first field in `fields`_"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:162
msgid ""
"If the entity violates the constraint the error message is bound to the "
"first field in `fields`_. If there is more than one field, you may want to "
"map the error message to another field."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:166
msgid "Consider this example:"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:253
msgid ""
"Now, the message would be bound to the ``port`` field with this "
"configuration."
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:256
msgid "ignoreNull"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:258
msgid "**type**: ``Boolean`` **default**: ``true``"
msgstr ""

#: ../../reference/constraints/UniqueEntity.rst:260
msgid ""
"If this option is set to ``true``, then the constraint will allow multiple "
"entities to have a ``null`` value for a field without failing validation. If"
" set to ``false``, only one ``null`` value is allowed - if a second entity "
"also has a ``null`` value, validation would fail."
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:2
msgid "payload"
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:4
msgid "**type**: ``mixed`` **default**: ``null``"
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:6
msgid "The ``payload`` option was introduced in Symfony 2.6."
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:9
msgid ""
"This option can be used to attach arbitrary domain-specific data to a "
"constraint. The configured payload is not used by the Validator component, "
"but its processing is completely up to."
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:13
msgid ""
"For example, you may want to used :doc:`several error levels "
"</cookbook/validation/severity>` to present failed constraint differently in"
" the front-end depending on the severity of the error."
msgstr ""
