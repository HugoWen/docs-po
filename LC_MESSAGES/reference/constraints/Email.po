# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/constraints/Email.rst:2
msgid "Email"
msgstr ""

#: ../../reference/constraints/Email.rst:4
msgid ""
"Validates that a value is a valid email address. The underlying value is "
"cast to a string before being validated."
msgstr ""

#: ../../reference/constraints/Email.rst:8
msgid "Applies to"
msgstr ""

#: ../../reference/constraints/Email.rst:8
msgid ":ref:`property or method <validation-property-target>`"
msgstr ""

#: ../../reference/constraints/Email.rst:10
#: ../../reference/constraints/Email.rst:92
msgid "Options"
msgstr ""

#: ../../reference/constraints/Email.rst:10
msgid "`strict`_"
msgstr ""

#: ../../reference/constraints/Email.rst:11
msgid "`message`_"
msgstr ""

#: ../../reference/constraints/Email.rst:12
msgid "`checkMX`_"
msgstr ""

#: ../../reference/constraints/Email.rst:13
msgid "`checkHost`_"
msgstr ""

#: ../../reference/constraints/Email.rst:14
msgid "`payload`_"
msgstr ""

#: ../../reference/constraints/Email.rst:16
msgid "Class"
msgstr ""

#: ../../reference/constraints/Email.rst:16
msgid ":class:`Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Email`"
msgstr ""

#: ../../reference/constraints/Email.rst:18
msgid "Validator"
msgstr ""

#: ../../reference/constraints/Email.rst:18
msgid ":class:`Symfony\\\\Component\\\\Validator\\\\Constraints\\\\EmailValidator`"
msgstr ""

#: ../../reference/constraints/Email.rst:22
msgid "Basic Usage"
msgstr ""

#: ../../reference/constraints/Email.rst:95
msgid "strict"
msgstr ""

#: ../../reference/constraints/Email.rst:97
msgid "**type**: ``boolean`` **default**: ``false``"
msgstr ""

#: ../../reference/constraints/Email.rst:99
msgid ""
"When false, the email will be validated against a simple regular expression."
" If true, then the `egulias/email-validator`_ library is required to perform"
" an RFC compliant validation."
msgstr ""

#: ../../reference/constraints/Email.rst:104
msgid "message"
msgstr ""

#: ../../reference/constraints/Email.rst:106
msgid ""
"**type**: ``string`` **default**: ``This value is not a valid email "
"address.``"
msgstr ""

#: ../../reference/constraints/Email.rst:108
msgid ""
"This message is shown if the underlying data is not a valid email address."
msgstr ""

#: ../../reference/constraints/Email.rst:111
msgid "checkMX"
msgstr ""

#: ../../reference/constraints/Email.rst:113
#: ../../reference/constraints/Email.rst:121
msgid "**type**: ``Boolean`` **default**: ``false``"
msgstr ""

#: ../../reference/constraints/Email.rst:115
msgid ""
"If true, then the :phpfunction:`checkdnsrr` PHP function will be used to "
"check the validity of the MX record of the host of the given email."
msgstr ""

#: ../../reference/constraints/Email.rst:119
msgid "checkHost"
msgstr ""

#: ../../reference/constraints/Email.rst:123
msgid ""
"If true, then the :phpfunction:`checkdnsrr` PHP function will be used to "
"check the validity of the MX *or* the A *or* the AAAA record of the host of "
"the given email."
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:2
msgid "payload"
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:4
msgid "**type**: ``mixed`` **default**: ``null``"
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:6
msgid "The ``payload`` option was introduced in Symfony 2.6."
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:9
msgid ""
"This option can be used to attach arbitrary domain-specific data to a "
"constraint. The configured payload is not used by the Validator component, "
"but its processing is completely up to."
msgstr ""

#: ../../reference/constraints/_payload-option.rst.inc:13
msgid ""
"For example, you may want to used :doc:`several error levels "
"</cookbook/validation/severity>` to present failed constraint differently in"
" the front-end depending on the severity of the error."
msgstr ""
