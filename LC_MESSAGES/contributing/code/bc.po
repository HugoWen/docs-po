# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../contributing/code/bc.rst:2
msgid "Our backwards Compatibility Promise"
msgstr ""

#: ../../contributing/code/bc.rst:4
msgid ""
"Ensuring smooth upgrades of your projects is our first priority. That's why "
"we promise you backwards compatibility (BC) for all minor Symfony releases. "
"You probably recognize this strategy as `Semantic Versioning`_. In short, "
"Semantic Versioning means that only major releases (such as 2.0, 3.0 etc.) "
"are allowed to break backwards compatibility. Minor releases (such as 2.5, "
"2.6 etc.) may introduce new features, but must do so without breaking the "
"existing API of that release branch (2.x in the previous example)."
msgstr ""

#: ../../contributing/code/bc.rst:14
msgid ""
"This promise was introduced with Symfony 2.3 and does not apply to previous "
"versions of Symfony."
msgstr ""

#: ../../contributing/code/bc.rst:17
msgid ""
"However, backwards compatibility comes in many different flavors. In fact, "
"almost every change that we make to the framework can potentially break an "
"application. For example, if we add a new method to a class, this will break"
" an application which extended this class and added the same method, but "
"with a different method signature."
msgstr ""

#: ../../contributing/code/bc.rst:23
msgid ""
"Also, not every BC break has the same impact on application code. While some"
" BC breaks require you to make significant changes to your classes or your "
"architecture, others are fixed as easily as changing the name of a method."
msgstr ""

#: ../../contributing/code/bc.rst:27
msgid ""
"That's why we created this page for you. The section \"Using Symfony Code\" "
"will tell you how you can ensure that your application won't break "
"completely when upgrading to a newer version of the same major release "
"branch."
msgstr ""

#: ../../contributing/code/bc.rst:31
msgid ""
"The second section, \"Working on Symfony Code\", is targeted at Symfony "
"contributors. This section lists detailed rules that every contributor needs"
" to follow to ensure smooth upgrades for our users."
msgstr ""

#: ../../contributing/code/bc.rst:36
msgid "Using Symfony Code"
msgstr ""

#: ../../contributing/code/bc.rst:38
msgid ""
"If you are using Symfony in your projects, the following guidelines will "
"help you to ensure smooth upgrades to all future minor releases of your "
"Symfony version."
msgstr ""

#: ../../contributing/code/bc.rst:43
msgid "Using our Interfaces"
msgstr ""

#: ../../contributing/code/bc.rst:45
msgid ""
"All interfaces shipped with Symfony can be used in type hints. You can also "
"call any of the methods that they declare. We guarantee that we won't break "
"code that sticks to these rules."
msgstr ""

#: ../../contributing/code/bc.rst:51
msgid ""
"The exception to this rule are interfaces tagged with ``@internal``. Such "
"interfaces should not be used or implemented."
msgstr ""

#: ../../contributing/code/bc.rst:54
msgid ""
"If you want to implement an interface, you should first make sure that the "
"interface is an API interface. You can recognize API interfaces by the "
"``@api`` tag in their source code::"
msgstr ""

#: ../../contributing/code/bc.rst:70
msgid ""
"If you implement an API interface, we promise that we won't ever break your "
"code. Regular interfaces, by contrast, may be extended between minor "
"releases, for example by adding a new method. Be prepared to upgrade your "
"code manually if you implement a regular interface."
msgstr ""

#: ../../contributing/code/bc.rst:77
msgid ""
"Even if we do changes that require manual upgrades, we limit ourselves to "
"changes that can be upgraded easily. We will always document the precise "
"upgrade instructions in the UPGRADE file in Symfony's root directory."
msgstr ""

#: ../../contributing/code/bc.rst:81
msgid ""
"The following table explains in detail which use cases are covered by our "
"backwards compatibility promise:"
msgstr ""

#: ../../contributing/code/bc.rst:85 ../../contributing/code/bc.rst:153
msgid "Use Case"
msgstr ""

#: ../../contributing/code/bc.rst:85 ../../contributing/code/bc.rst:153
#: ../../contributing/code/bc.rst:209 ../../contributing/code/bc.rst:238
msgid "Regular"
msgstr ""

#: ../../contributing/code/bc.rst:85 ../../contributing/code/bc.rst:153
#: ../../contributing/code/bc.rst:209 ../../contributing/code/bc.rst:238
msgid "API"
msgstr ""

#: ../../contributing/code/bc.rst:87 ../../contributing/code/bc.rst:155
msgid "**If you...**"
msgstr ""

#: ../../contributing/code/bc.rst:87 ../../contributing/code/bc.rst:93
#: ../../contributing/code/bc.rst:155 ../../contributing/code/bc.rst:167
msgid "**Then we guarantee BC...**"
msgstr ""

#: ../../contributing/code/bc.rst:89
msgid "Type hint against the interface"
msgstr ""

#: ../../contributing/code/bc.rst:89 ../../contributing/code/bc.rst:89
#: ../../contributing/code/bc.rst:91 ../../contributing/code/bc.rst:91
#: ../../contributing/code/bc.rst:95 ../../contributing/code/bc.rst:97
#: ../../contributing/code/bc.rst:99 ../../contributing/code/bc.rst:99
#: ../../contributing/code/bc.rst:157 ../../contributing/code/bc.rst:157
#: ../../contributing/code/bc.rst:159 ../../contributing/code/bc.rst:159
#: ../../contributing/code/bc.rst:161 ../../contributing/code/bc.rst:161
#: ../../contributing/code/bc.rst:163 ../../contributing/code/bc.rst:163
#: ../../contributing/code/bc.rst:165 ../../contributing/code/bc.rst:165
#: ../../contributing/code/bc.rst:169 ../../contributing/code/bc.rst:171
#: ../../contributing/code/bc.rst:173 ../../contributing/code/bc.rst:173
#: ../../contributing/code/bc.rst:175 ../../contributing/code/bc.rst:177
#: ../../contributing/code/bc.rst:179 ../../contributing/code/bc.rst:185
#: ../../contributing/code/bc.rst:187 ../../contributing/code/bc.rst:187
#: ../../contributing/code/bc.rst:219 ../../contributing/code/bc.rst:219
#: ../../contributing/code/bc.rst:245 ../../contributing/code/bc.rst:245
#: ../../contributing/code/bc.rst:248 ../../contributing/code/bc.rst:248
#: ../../contributing/code/bc.rst:251 ../../contributing/code/bc.rst:251
#: ../../contributing/code/bc.rst:253 ../../contributing/code/bc.rst:253
#: ../../contributing/code/bc.rst:256 ../../contributing/code/bc.rst:256
#: ../../contributing/code/bc.rst:258 ../../contributing/code/bc.rst:258
#: ../../contributing/code/bc.rst:259 ../../contributing/code/bc.rst:259
#: ../../contributing/code/bc.rst:265 ../../contributing/code/bc.rst:265
#: ../../contributing/code/bc.rst:267 ../../contributing/code/bc.rst:267
#: ../../contributing/code/bc.rst:271 ../../contributing/code/bc.rst:271
#: ../../contributing/code/bc.rst:282 ../../contributing/code/bc.rst:282
#: ../../contributing/code/bc.rst:286 ../../contributing/code/bc.rst:286
#: ../../contributing/code/bc.rst:297 ../../contributing/code/bc.rst:297
#: ../../contributing/code/bc.rst:298 ../../contributing/code/bc.rst:298
#: ../../contributing/code/bc.rst:299 ../../contributing/code/bc.rst:299
#: ../../contributing/code/bc.rst:300 ../../contributing/code/bc.rst:300
#: ../../contributing/code/bc.rst:301 ../../contributing/code/bc.rst:301
#: ../../contributing/code/bc.rst:302 ../../contributing/code/bc.rst:302
#: ../../contributing/code/bc.rst:303 ../../contributing/code/bc.rst:303
#: ../../contributing/code/bc.rst:304 ../../contributing/code/bc.rst:304
#: ../../contributing/code/bc.rst:305 ../../contributing/code/bc.rst:305
#: ../../contributing/code/bc.rst:306 ../../contributing/code/bc.rst:306
#: ../../contributing/code/bc.rst:307 ../../contributing/code/bc.rst:307
#: ../../contributing/code/bc.rst:308 ../../contributing/code/bc.rst:308
#: ../../contributing/code/bc.rst:309 ../../contributing/code/bc.rst:309
msgid "Yes"
msgstr ""

#: ../../contributing/code/bc.rst:91
msgid "Call a method"
msgstr ""

#: ../../contributing/code/bc.rst:93
msgid "**If you implement the interface and...**"
msgstr ""

#: ../../contributing/code/bc.rst:95
msgid "Implement a method"
msgstr ""

#: ../../contributing/code/bc.rst:95 ../../contributing/code/bc.rst:97
#: ../../contributing/code/bc.rst:169 ../../contributing/code/bc.rst:171
#: ../../contributing/code/bc.rst:175 ../../contributing/code/bc.rst:177
#: ../../contributing/code/bc.rst:179 ../../contributing/code/bc.rst:185
msgid "No [1]_"
msgstr ""

#: ../../contributing/code/bc.rst:97
msgid "Add an argument to an implemented method"
msgstr ""

#: ../../contributing/code/bc.rst:99 ../../contributing/code/bc.rst:187
msgid "Add a default value to an argument"
msgstr ""

#: ../../contributing/code/_api_tagging.rst.inc:3
#: ../../contributing/code/_api_tagging.rst.inc:3
msgid ""
"If you think that one of our regular classes should have an ``@api`` tag, "
"put your request into a `new ticket on GitHub`_. We will then evaluate "
"whether we can add the tag or not."
msgstr ""

#: ../../contributing/code/bc.rst:105
msgid "Using our Classes"
msgstr ""

#: ../../contributing/code/bc.rst:107
msgid ""
"All classes provided by Symfony may be instantiated and accessed through "
"their public methods and properties."
msgstr ""

#: ../../contributing/code/bc.rst:112
msgid ""
"Classes, properties and methods that bear the tag ``@internal`` as well as "
"the classes located in the various ``*\\\\Tests\\\\`` namespaces are an "
"exception to this rule. They are meant for internal use only and should not "
"be accessed by your own code."
msgstr ""

#: ../../contributing/code/bc.rst:117
msgid ""
"Just like with interfaces, we also distinguish between regular and API "
"classes. Like API interfaces, API classes are marked with an ``@api`` tag::"
msgstr ""

#: ../../contributing/code/bc.rst:132
msgid ""
"The difference between regular and API classes is that we guarantee full "
"backwards compatibility if you extend an API class and override its methods."
" We can't give the same promise for regular classes, because there we may, "
"for example, add an optional argument to a method. Consequently, the "
"signature of your overridden method wouldn't match anymore and generate a "
"fatal error."
msgstr ""

#: ../../contributing/code/bc.rst:140
msgid ""
"As with interfaces, we limit ourselves to changes that can be upgraded "
"easily. We will document the precise upgrade instructions in the UPGRADE "
"file in Symfony's root directory."
msgstr ""

#: ../../contributing/code/bc.rst:144
msgid ""
"In some cases, only specific properties and methods are tagged with the "
"``@api`` tag, even though their class is not. In these cases, we guarantee "
"full backwards compatibility for the tagged properties and methods (as "
"indicated in the column \"API\" below), but not for the rest of the class."
msgstr ""

#: ../../contributing/code/bc.rst:149
msgid ""
"To be on the safe side, check the following table to know which use cases "
"are covered by our backwards compatibility promise:"
msgstr ""

#: ../../contributing/code/bc.rst:157
msgid "Type hint against the class"
msgstr ""

#: ../../contributing/code/bc.rst:159
msgid "Create a new instance"
msgstr ""

#: ../../contributing/code/bc.rst:161
msgid "Extend the class"
msgstr ""

#: ../../contributing/code/bc.rst:163
msgid "Access a public property"
msgstr ""

#: ../../contributing/code/bc.rst:165
msgid "Call a public method"
msgstr ""

#: ../../contributing/code/bc.rst:167
msgid "**If you extend the class and...**"
msgstr ""

#: ../../contributing/code/bc.rst:169
msgid "Access a protected property"
msgstr ""

#: ../../contributing/code/bc.rst:171
msgid "Call a protected method"
msgstr ""

#: ../../contributing/code/bc.rst:173
msgid "Override a public property"
msgstr ""

#: ../../contributing/code/bc.rst:175
msgid "Override a protected property"
msgstr ""

#: ../../contributing/code/bc.rst:177
msgid "Override a public method"
msgstr ""

#: ../../contributing/code/bc.rst:179
msgid "Override a protected method"
msgstr ""

#: ../../contributing/code/bc.rst:181
msgid "Add a new property"
msgstr ""

#: ../../contributing/code/bc.rst:181 ../../contributing/code/bc.rst:181
#: ../../contributing/code/bc.rst:183 ../../contributing/code/bc.rst:183
#: ../../contributing/code/bc.rst:189 ../../contributing/code/bc.rst:189
#: ../../contributing/code/bc.rst:191 ../../contributing/code/bc.rst:191
#: ../../contributing/code/bc.rst:211 ../../contributing/code/bc.rst:211
#: ../../contributing/code/bc.rst:212 ../../contributing/code/bc.rst:212
#: ../../contributing/code/bc.rst:214 ../../contributing/code/bc.rst:214
#: ../../contributing/code/bc.rst:216 ../../contributing/code/bc.rst:217
#: ../../contributing/code/bc.rst:217 ../../contributing/code/bc.rst:218
#: ../../contributing/code/bc.rst:218 ../../contributing/code/bc.rst:220
#: ../../contributing/code/bc.rst:220 ../../contributing/code/bc.rst:221
#: ../../contributing/code/bc.rst:223 ../../contributing/code/bc.rst:224
#: ../../contributing/code/bc.rst:224 ../../contributing/code/bc.rst:225
#: ../../contributing/code/bc.rst:225 ../../contributing/code/bc.rst:226
#: ../../contributing/code/bc.rst:227 ../../contributing/code/bc.rst:228
#: ../../contributing/code/bc.rst:240 ../../contributing/code/bc.rst:240
#: ../../contributing/code/bc.rst:241 ../../contributing/code/bc.rst:241
#: ../../contributing/code/bc.rst:242 ../../contributing/code/bc.rst:242
#: ../../contributing/code/bc.rst:243 ../../contributing/code/bc.rst:243
#: ../../contributing/code/bc.rst:246 ../../contributing/code/bc.rst:246
#: ../../contributing/code/bc.rst:249 ../../contributing/code/bc.rst:249
#: ../../contributing/code/bc.rst:250 ../../contributing/code/bc.rst:250
#: ../../contributing/code/bc.rst:254 ../../contributing/code/bc.rst:255
#: ../../contributing/code/bc.rst:262 ../../contributing/code/bc.rst:263
#: ../../contributing/code/bc.rst:263 ../../contributing/code/bc.rst:264
#: ../../contributing/code/bc.rst:268 ../../contributing/code/bc.rst:268
#: ../../contributing/code/bc.rst:269 ../../contributing/code/bc.rst:269
#: ../../contributing/code/bc.rst:270 ../../contributing/code/bc.rst:270
#: ../../contributing/code/bc.rst:272 ../../contributing/code/bc.rst:272
#: ../../contributing/code/bc.rst:273 ../../contributing/code/bc.rst:275
#: ../../contributing/code/bc.rst:276 ../../contributing/code/bc.rst:276
#: ../../contributing/code/bc.rst:277 ../../contributing/code/bc.rst:278
#: ../../contributing/code/bc.rst:279 ../../contributing/code/bc.rst:280
#: ../../contributing/code/bc.rst:283 ../../contributing/code/bc.rst:284
#: ../../contributing/code/bc.rst:284 ../../contributing/code/bc.rst:285
#: ../../contributing/code/bc.rst:287 ../../contributing/code/bc.rst:288
#: ../../contributing/code/bc.rst:290 ../../contributing/code/bc.rst:291
#: ../../contributing/code/bc.rst:292 ../../contributing/code/bc.rst:293
#: ../../contributing/code/bc.rst:294 ../../contributing/code/bc.rst:295
#: ../../contributing/code/bc.rst:311 ../../contributing/code/bc.rst:311
#: ../../contributing/code/bc.rst:312 ../../contributing/code/bc.rst:312
msgid "No"
msgstr ""

#: ../../contributing/code/bc.rst:183
msgid "Add a new method"
msgstr ""

#: ../../contributing/code/bc.rst:185
msgid "Add an argument to an overridden method"
msgstr ""

#: ../../contributing/code/bc.rst:189
msgid "Call a private method (via Reflection)"
msgstr ""

#: ../../contributing/code/bc.rst:191
msgid "Access a private property (via Reflection)"
msgstr ""

#: ../../contributing/code/bc.rst:197
msgid "Working on Symfony Code"
msgstr ""

#: ../../contributing/code/bc.rst:199
msgid ""
"Do you want to help us improve Symfony? That's great! However, please stick "
"to the rules listed below in order to ensure smooth upgrades for our users."
msgstr ""

#: ../../contributing/code/bc.rst:203
msgid "Changing Interfaces"
msgstr ""

#: ../../contributing/code/bc.rst:205
msgid ""
"This table tells you which changes you are allowed to do when working on "
"Symfony's interfaces:"
msgstr ""

#: ../../contributing/code/bc.rst:209 ../../contributing/code/bc.rst:238
msgid "Type of Change"
msgstr ""

#: ../../contributing/code/bc.rst:211 ../../contributing/code/bc.rst:240
msgid "Remove entirely"
msgstr ""

#: ../../contributing/code/bc.rst:212 ../../contributing/code/bc.rst:243
msgid "Change name or namespace"
msgstr ""

#: ../../contributing/code/bc.rst:213
msgid "Add parent interface"
msgstr ""

#: ../../contributing/code/bc.rst:213 ../../contributing/code/bc.rst:216
#: ../../contributing/code/bc.rst:221 ../../contributing/code/bc.rst:223
#: ../../contributing/code/bc.rst:226 ../../contributing/code/bc.rst:254
#: ../../contributing/code/bc.rst:255 ../../contributing/code/bc.rst:261
#: ../../contributing/code/bc.rst:261 ../../contributing/code/bc.rst:262
#: ../../contributing/code/bc.rst:264 ../../contributing/code/bc.rst:273
#: ../../contributing/code/bc.rst:275 ../../contributing/code/bc.rst:278
#: ../../contributing/code/bc.rst:283 ../../contributing/code/bc.rst:285
#: ../../contributing/code/bc.rst:287 ../../contributing/code/bc.rst:288
#: ../../contributing/code/bc.rst:290 ../../contributing/code/bc.rst:291
#: ../../contributing/code/bc.rst:292 ../../contributing/code/bc.rst:293
msgid "Yes [2]_"
msgstr ""

#: ../../contributing/code/bc.rst:213
msgid "Yes [3]_"
msgstr ""

#: ../../contributing/code/bc.rst:214
msgid "Remove parent interface"
msgstr ""

#: ../../contributing/code/bc.rst:215
msgid "**Methods**"
msgstr ""

#: ../../contributing/code/bc.rst:216
msgid "Add method"
msgstr ""

#: ../../contributing/code/bc.rst:217
msgid "Remove method"
msgstr ""

#: ../../contributing/code/bc.rst:218 ../../contributing/code/bc.rst:269
#: ../../contributing/code/bc.rst:284 ../../contributing/code/bc.rst:299
msgid "Change name"
msgstr ""

#: ../../contributing/code/bc.rst:219
msgid "Move to parent interface"
msgstr ""

#: ../../contributing/code/bc.rst:220 ../../contributing/code/bc.rst:272
#: ../../contributing/code/bc.rst:287 ../../contributing/code/bc.rst:301
msgid "Add argument without a default value"
msgstr ""

#: ../../contributing/code/bc.rst:221 ../../contributing/code/bc.rst:273
#: ../../contributing/code/bc.rst:288 ../../contributing/code/bc.rst:302
msgid "Add argument with a default value"
msgstr ""

#: ../../contributing/code/bc.rst:222 ../../contributing/code/bc.rst:274
#: ../../contributing/code/bc.rst:289 ../../contributing/code/bc.rst:303
msgid "Remove argument"
msgstr ""

#: ../../contributing/code/bc.rst:222 ../../contributing/code/bc.rst:222
#: ../../contributing/code/bc.rst:274 ../../contributing/code/bc.rst:274
#: ../../contributing/code/bc.rst:289 ../../contributing/code/bc.rst:289
msgid "Yes [4]_"
msgstr ""

#: ../../contributing/code/bc.rst:223 ../../contributing/code/bc.rst:275
#: ../../contributing/code/bc.rst:290 ../../contributing/code/bc.rst:304
msgid "Add default value to an argument"
msgstr ""

#: ../../contributing/code/bc.rst:224 ../../contributing/code/bc.rst:276
#: ../../contributing/code/bc.rst:291 ../../contributing/code/bc.rst:305
msgid "Remove default value of an argument"
msgstr ""

#: ../../contributing/code/bc.rst:225 ../../contributing/code/bc.rst:277
#: ../../contributing/code/bc.rst:292 ../../contributing/code/bc.rst:306
msgid "Add type hint to an argument"
msgstr ""

#: ../../contributing/code/bc.rst:226 ../../contributing/code/bc.rst:278
#: ../../contributing/code/bc.rst:293 ../../contributing/code/bc.rst:307
msgid "Remove type hint of an argument"
msgstr ""

#: ../../contributing/code/bc.rst:227 ../../contributing/code/bc.rst:279
#: ../../contributing/code/bc.rst:294 ../../contributing/code/bc.rst:308
msgid "Change argument type"
msgstr ""

#: ../../contributing/code/bc.rst:227 ../../contributing/code/bc.rst:279
#: ../../contributing/code/bc.rst:294
msgid "Yes [2]_ [5]_"
msgstr ""

#: ../../contributing/code/bc.rst:228 ../../contributing/code/bc.rst:280
#: ../../contributing/code/bc.rst:295 ../../contributing/code/bc.rst:309
msgid "Change return type"
msgstr ""

#: ../../contributing/code/bc.rst:228 ../../contributing/code/bc.rst:280
#: ../../contributing/code/bc.rst:295
msgid "Yes [2]_ [6]_"
msgstr ""

#: ../../contributing/code/bc.rst:232
msgid "Changing Classes"
msgstr ""

#: ../../contributing/code/bc.rst:234
msgid ""
"This table tells you which changes you are allowed to do when working on "
"Symfony's classes:"
msgstr ""

#: ../../contributing/code/bc.rst:241
msgid "Make final"
msgstr ""

#: ../../contributing/code/bc.rst:242
msgid "Make abstract"
msgstr ""

#: ../../contributing/code/bc.rst:244
msgid "Change parent class"
msgstr ""

#: ../../contributing/code/bc.rst:244 ../../contributing/code/bc.rst:244
msgid "Yes [7]_"
msgstr ""

#: ../../contributing/code/bc.rst:245
msgid "Add interface"
msgstr ""

#: ../../contributing/code/bc.rst:246
msgid "Remove interface"
msgstr ""

#: ../../contributing/code/bc.rst:247
msgid "**Public Properties**"
msgstr ""

#: ../../contributing/code/bc.rst:248
msgid "Add public property"
msgstr ""

#: ../../contributing/code/bc.rst:249
msgid "Remove public property"
msgstr ""

#: ../../contributing/code/bc.rst:250 ../../contributing/code/bc.rst:255
#: ../../contributing/code/bc.rst:270 ../../contributing/code/bc.rst:285
#: ../../contributing/code/bc.rst:300
msgid "Reduce visibility"
msgstr ""

#: ../../contributing/code/bc.rst:251 ../../contributing/code/bc.rst:256
#: ../../contributing/code/bc.rst:265 ../../contributing/code/bc.rst:271
#: ../../contributing/code/bc.rst:286
msgid "Move to parent class"
msgstr ""

#: ../../contributing/code/bc.rst:252
msgid "**Protected Properties**"
msgstr ""

#: ../../contributing/code/bc.rst:253
msgid "Add protected property"
msgstr ""

#: ../../contributing/code/bc.rst:254
msgid "Remove protected property"
msgstr ""

#: ../../contributing/code/bc.rst:257
msgid "**Private Properties**"
msgstr ""

#: ../../contributing/code/bc.rst:258
msgid "Add private property"
msgstr ""

#: ../../contributing/code/bc.rst:259
msgid "Remove private property"
msgstr ""

#: ../../contributing/code/bc.rst:260
msgid "**Constructors**"
msgstr ""

#: ../../contributing/code/bc.rst:261
msgid "Add constructor without mandatory arguments"
msgstr ""

#: ../../contributing/code/bc.rst:262
msgid "Remove constructor"
msgstr ""

#: ../../contributing/code/bc.rst:263
msgid "Reduce visibility of a public constructor"
msgstr ""

#: ../../contributing/code/bc.rst:264
msgid "Reduce visibility of a protected constructor"
msgstr ""

#: ../../contributing/code/bc.rst:266
msgid "**Public Methods**"
msgstr ""

#: ../../contributing/code/bc.rst:267
msgid "Add public method"
msgstr ""

#: ../../contributing/code/bc.rst:268
msgid "Remove public method"
msgstr ""

#: ../../contributing/code/bc.rst:277
msgid "Yes [8]_"
msgstr ""

#: ../../contributing/code/bc.rst:281
msgid "**Protected Methods**"
msgstr ""

#: ../../contributing/code/bc.rst:282
msgid "Add protected method"
msgstr ""

#: ../../contributing/code/bc.rst:283
msgid "Remove protected method"
msgstr ""

#: ../../contributing/code/bc.rst:296
msgid "**Private Methods**"
msgstr ""

#: ../../contributing/code/bc.rst:297
msgid "Add private method"
msgstr ""

#: ../../contributing/code/bc.rst:298
msgid "Remove private method"
msgstr ""

#: ../../contributing/code/bc.rst:310
msgid "**Static Methods**"
msgstr ""

#: ../../contributing/code/bc.rst:311
msgid "Turn non static into static"
msgstr ""

#: ../../contributing/code/bc.rst:312
msgid "Turn static into non static"
msgstr ""

#: ../../contributing/code/bc.rst:315
msgid ""
"Your code may be broken by changes in the Symfony code. Such changes will "
"however be documented in the UPGRADE file."
msgstr ""

#: ../../contributing/code/bc.rst:318
msgid ""
"Should be avoided. When done, this change must be documented in the UPGRADE "
"file."
msgstr ""

#: ../../contributing/code/bc.rst:321
msgid ""
"The added parent interface must not introduce any new methods that don't "
"exist in the interface already."
msgstr ""

#: ../../contributing/code/bc.rst:324
msgid ""
"Only the last argument(s) of a method may be removed, as PHP does not care "
"about additional arguments that you pass to a method."
msgstr ""

#: ../../contributing/code/bc.rst:327
msgid ""
"The argument type may only be changed to a compatible or less specific type."
" The following type changes are allowed:"
msgstr ""

#: ../../contributing/code/bc.rst:331 ../../contributing/code/bc.rst:345
msgid "Original Type"
msgstr ""

#: ../../contributing/code/bc.rst:331 ../../contributing/code/bc.rst:345
msgid "New Type"
msgstr ""

#: ../../contributing/code/bc.rst:333 ../../contributing/code/bc.rst:347
msgid "boolean"
msgstr ""

#: ../../contributing/code/bc.rst:333 ../../contributing/code/bc.rst:347
msgid "any `scalar type`_ with equivalent `boolean values`_"
msgstr ""

#: ../../contributing/code/bc.rst:334 ../../contributing/code/bc.rst:348
msgid "string"
msgstr ""

#: ../../contributing/code/bc.rst:334 ../../contributing/code/bc.rst:348
msgid "any `scalar type`_ or object with equivalent `string values`_"
msgstr ""

#: ../../contributing/code/bc.rst:335 ../../contributing/code/bc.rst:349
msgid "integer"
msgstr ""

#: ../../contributing/code/bc.rst:335 ../../contributing/code/bc.rst:349
msgid "any `scalar type`_ with equivalent `integer values`_"
msgstr ""

#: ../../contributing/code/bc.rst:336 ../../contributing/code/bc.rst:350
msgid "float"
msgstr ""

#: ../../contributing/code/bc.rst:336 ../../contributing/code/bc.rst:350
msgid "any `scalar type`_ with equivalent `float values`_"
msgstr ""

#: ../../contributing/code/bc.rst:337 ../../contributing/code/bc.rst:355
msgid "class ``<C>``"
msgstr ""

#: ../../contributing/code/bc.rst:337
msgid "any superclass or interface of ``<C>``"
msgstr ""

#: ../../contributing/code/bc.rst:338 ../../contributing/code/bc.rst:356
msgid "interface ``<I>``"
msgstr ""

#: ../../contributing/code/bc.rst:338
msgid "any superinterface of ``<I>``"
msgstr ""

#: ../../contributing/code/bc.rst:341
msgid ""
"The return type may only be changed to a compatible or more specific type. "
"The following type changes are allowed:"
msgstr ""

#: ../../contributing/code/bc.rst:351 ../../contributing/code/bc.rst:352
#: ../../contributing/code/bc.rst:353 ../../contributing/code/bc.rst:354
msgid "array"
msgstr ""

#: ../../contributing/code/bc.rst:351
msgid "instance of ``ArrayAccess``, ``Traversable`` and ``Countable``"
msgstr ""

#: ../../contributing/code/bc.rst:352
msgid "``ArrayAccess``"
msgstr ""

#: ../../contributing/code/bc.rst:353
msgid "``Traversable``"
msgstr ""

#: ../../contributing/code/bc.rst:354
msgid "``Countable``"
msgstr ""

#: ../../contributing/code/bc.rst:355
msgid "any subclass of ``<C>``"
msgstr ""

#: ../../contributing/code/bc.rst:356
msgid "any subinterface or implementing class of ``<I>``"
msgstr ""

#: ../../contributing/code/bc.rst:359
msgid ""
"When changing the parent class, the original parent class must remain an "
"ancestor of the class."
msgstr ""

#: ../../contributing/code/bc.rst:362
msgid ""
"A type hint may only be added if passing a value with a different type "
"previously generated a fatal error."
msgstr ""
