# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../best_practices/creating-the-project.rst:2
msgid "Creating the Project"
msgstr "创建项目"

#: ../../best_practices/creating-the-project.rst:5
msgid "Installing Symfony"
msgstr "安装Symfony"

#: ../../best_practices/creating-the-project.rst:7
msgid ""
"In the past, Symfony projects were created with `Composer`_, the dependency "
"manager for PHP applications. However, the current recommendation is to use "
"the **Symfony Installer**, which has to be installed before creating your "
"first project."
msgstr ""

#: ../../best_practices/creating-the-project.rst:12
msgid "Linux and Mac OS X Systems"
msgstr "Linux和Mac OS X系统"

#: ../../best_practices/creating-the-project.rst:14
#: ../../best_practices/creating-the-project.rst:28
msgid "Open your command console and execute the following:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:22
msgid ""
"Now you can execute the Symfony Installer as a global system command called "
"``symfony``."
msgstr ""

#: ../../best_practices/creating-the-project.rst:26
msgid "Windows Systems"
msgstr "Windows系统"

#: ../../best_practices/creating-the-project.rst:34
msgid ""
"Then, move the downloaded ``symfony.phar`` file to your projects directory "
"and execute it as follows:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:42
msgid "Creating the Blog Application"
msgstr "创建博客应用"

#: ../../best_practices/creating-the-project.rst:44
msgid ""
"Now that everything is correctly set up, you can create a new project based "
"on Symfony. In your command console, browse to a directory where you have "
"permission to create files and execute the following commands:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:58
msgid ""
"This command creates a new directory called ``blog`` that contains a fresh "
"new project based on the most recent stable Symfony version available. In "
"addition, the installer checks if your system meets the technical "
"requirements to execute Symfony applications. If not, you'll see the list of"
" changes needed to meet those requirements."
msgstr ""

#: ../../best_practices/creating-the-project.rst:66
msgid ""
"Symfony releases are digitally signed for security reasons. If you want to "
"verify the integrity of your Symfony installation, take a look at the "
"`public checksums repository`_ and follow `these steps`_ to verify the "
"signatures."
msgstr ""

#: ../../best_practices/creating-the-project.rst:72
msgid "Structuring the Application"
msgstr "代码目录结构"

#: ../../best_practices/creating-the-project.rst:74
msgid ""
"After creating the application, enter the ``blog/`` directory and you'll see"
" a number of files and directories generated automatically:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:91
msgid ""
"This file and directory hierarchy is the convention proposed by Symfony to "
"structure your applications. The recommended purpose of each directory is "
"the following:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:95
msgid ""
"``app/cache/``, stores all the cache files generated by the application;"
msgstr ""

#: ../../best_practices/creating-the-project.rst:96
msgid ""
"``app/config/``, stores all the configuration defined for any environment;"
msgstr ""

#: ../../best_practices/creating-the-project.rst:97
msgid "``app/logs/``, stores all the log files generated by the application;"
msgstr ""

#: ../../best_practices/creating-the-project.rst:98
msgid ""
"``app/Resources/``, stores all the templates and the translation files for "
"the application;"
msgstr ""

#: ../../best_practices/creating-the-project.rst:100
msgid ""
"``src/AppBundle/``, stores the Symfony specific code (controllers and "
"routes), your domain code (e.g. Doctrine classes) and all your business "
"logic;"
msgstr ""

#: ../../best_practices/creating-the-project.rst:102
msgid ""
"``vendor/``, this is the directory where Composer installs the application's"
" dependencies and you should never modify any of its contents;"
msgstr ""

#: ../../best_practices/creating-the-project.rst:104
msgid ""
"``web/``, stores all the front controller files and all the web assets, such"
" as stylesheets, JavaScript files and images."
msgstr ""

#: ../../best_practices/creating-the-project.rst:108
msgid "Application Bundles"
msgstr "项目bundle"

#: ../../best_practices/creating-the-project.rst:110
msgid ""
"When Symfony 2.0 was released, most developers naturally adopted the symfony"
" 1.x way of dividing applications into logical modules. That's why many "
"Symfony apps use bundles to divide their code into logical features: "
"UserBundle, ProductBundle, InvoiceBundle, etc."
msgstr ""

#: ../../best_practices/creating-the-project.rst:115
msgid ""
"But a bundle is *meant* to be something that can be reused as a stand-alone "
"piece of software. If UserBundle cannot be used *\"as is\"* in other Symfony"
" apps, then it shouldn't be its own bundle. Moreover InvoiceBundle depends "
"on ProductBundle, then there's no advantage to having two separate bundles."
msgstr ""

#: ../../best_practices/creating-the-project.rst:0
msgid "Best Practice"
msgstr "最佳实践"

#: ../../best_practices/creating-the-project.rst:122
msgid "Create only one bundle called AppBundle for your application logic"
msgstr ""

#: ../../best_practices/creating-the-project.rst:124
msgid ""
"Implementing a single AppBundle bundle in your projects will make your code "
"more concise and easier to understand. Starting in Symfony 2.6, the official"
" Symfony documentation uses the AppBundle name."
msgstr ""

#: ../../best_practices/creating-the-project.rst:130
msgid ""
"There is no need to prefix the AppBundle with your own vendor (e.g. "
"AcmeAppBundle), because this application bundle is never going to be shared."
msgstr ""

#: ../../best_practices/creating-the-project.rst:134
msgid ""
"All in all, this is the typical directory structure of a Symfony application"
" that follows these best practices:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:155
msgid ""
"If your Symfony installation doesn't come with a pre-generated AppBundle, "
"you can generate it by hand executing this command:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:163
msgid "Extending the Directory Structure"
msgstr "修改默认的目录结构"

#: ../../best_practices/creating-the-project.rst:165
msgid ""
"If your project or infrastructure requires some changes to the default "
"directory structure of Symfony, you can :doc:`override the location of the "
"main directories </cookbook/configuration/override_dir_structure>`: "
"``cache/``, ``logs/`` and ``web/``."
msgstr ""

#: ../../best_practices/creating-the-project.rst:170
msgid ""
"In addition, Symfony3 will use a slightly different directory structure when"
" it's released:"
msgstr ""

#: ../../best_practices/creating-the-project.rst:188
msgid ""
"The changes are pretty superficial, but for now, we recommend that you use "
"the Symfony directory structure."
msgstr ""
