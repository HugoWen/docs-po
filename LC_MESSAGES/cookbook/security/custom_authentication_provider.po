# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../cookbook/security/custom_authentication_provider.rst:5
msgid "How to Create a custom Authentication Provider"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:9
msgid ""
"Creating a custom authentication system is hard, and this entry will walk "
"you through that process. But depending on your needs, you may be able to "
"solve your problem in a simpler way using these documents:"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:13
msgid ":doc:`/cookbook/security/custom_password_authenticator`"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:14
msgid ":doc:`/cookbook/security/api_key_authentication`"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:16
msgid ""
"If you have read the chapter on :doc:`/book/security`, you understand the "
"distinction Symfony makes between authentication and authorization in the "
"implementation of security. This chapter discusses the core classes involved"
" in the authentication process, and how to implement a custom authentication"
" provider. Because authentication and authorization are separate concepts, "
"this extension will be user-provider agnostic, and will function with your "
"application's user providers, may they be based in memory, a database, or "
"wherever else you choose to store them."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:26
msgid "Meet WSSE"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:28
msgid ""
"The following chapter demonstrates how to create a custom authentication "
"provider for WSSE authentication. The security protocol for WSSE provides "
"several security benefits:"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:32
msgid "Username / Password encryption"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:33
msgid "Safe guarding against replay attacks"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:34
msgid "No web server configuration required"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:36
msgid ""
"WSSE is very useful for the securing of web services, may they be SOAP or "
"REST."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:39
msgid ""
"There is plenty of great documentation on `WSSE`_, but this article will "
"focus not on the security protocol, but rather the manner in which a custom "
"protocol can be added to your Symfony application. The basis of WSSE is that"
" a request header is checked for encrypted credentials, verified using a "
"timestamp and `nonce`_, and authenticated for the requested user using a "
"password digest."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:48
msgid ""
"WSSE also supports application key validation, which is useful for web "
"services, but is outside the scope of this chapter."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:52
msgid "The Token"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:54
msgid ""
"The role of the token in the Symfony security context is an important one. A"
" token represents the user authentication data present in the request. Once "
"a request is authenticated, the token retains the user's data, and delivers "
"this data across the security context. First, you'll create your token "
"class. This will allow the passing of all relevant information to your "
"authentication provider."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:90
msgid ""
"The ``WsseUserToken`` class extends the Security component's "
":class:`Symfony\\\\Component\\\\Security\\\\Core\\\\Authentication\\\\Token\\\\AbstractToken`"
" class, which provides basic token functionality. Implement the "
":class:`Symfony\\\\Component\\\\Security\\\\Core\\\\Authentication\\\\Token\\\\TokenInterface`"
" on any class to use as a token."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:97
msgid "The Listener"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:99
msgid ""
"Next, you need a listener to listen on the firewall. The listener is "
"responsible for fielding requests to the firewall and calling the "
"authentication provider. A listener must be an instance of "
":class:`Symfony\\\\Component\\\\Security\\\\Http\\\\Firewall\\\\ListenerInterface`."
" A security listener should handle the "
":class:`Symfony\\\\Component\\\\HttpKernel\\\\Event\\\\GetResponseEvent` "
"event, and set an authenticated token in the token storage if successful."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:171
msgid ""
"This listener checks the request for the expected ``X-WSSE`` header, matches"
" the value returned for the expected WSSE information, creates a token using"
" that information, and passes the token on to the authentication manager. If"
" the proper information is not provided, or the authentication manager "
"throws an "
":class:`Symfony\\\\Component\\\\Security\\\\Core\\\\Exception\\\\AuthenticationException`,"
" a 403 Response is returned."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:180
msgid ""
"A class not used above, the "
":class:`Symfony\\\\Component\\\\Security\\\\Http\\\\Firewall\\\\AbstractAuthenticationListener`"
" class, is a very useful base class which provides commonly needed "
"functionality for security extensions. This includes maintaining the token "
"in the session, providing success / failure handlers, login form URLs, and "
"more. As WSSE does not require maintaining authentication sessions or login "
"forms, it won't be used for this example."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:190
msgid ""
"Returning prematurely from the listener is relevant only if you want to "
"chain authentication providers (for example to allow anonymous users). If "
"you want to forbid access to anonymous users and have a nice 403 error, you "
"should set the status code of the response before returning."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:196
msgid "The Authentication Provider"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:198
msgid ""
"The authentication provider will do the verification of the "
"``WsseUserToken``. Namely, the provider will verify the ``Created`` header "
"value is valid within five minutes, the ``Nonce`` header value is unique "
"within five minutes, and the ``PasswordDigest`` header value matches with "
"the user's password."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:284
msgid ""
"The "
":class:`Symfony\\\\Component\\\\Security\\\\Core\\\\Authentication\\\\Provider\\\\AuthenticationProviderInterface`"
" requires an ``authenticate`` method on the user token, and a ``supports`` "
"method, which tells the authentication manager whether or not to use this "
"provider for the given token. In the case of multiple providers, the "
"authentication manager will then move to the next provider in the list."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:292
msgid ""
"The comparsion of the expected and the provided digests uses a constant time"
" comparison provided by the "
":method:`Symfony\\\\Component\\\\Security\\\\Core\\\\Util\\\\StringUtils::equals`"
" method of the ``StringUtils`` class. It is used to mitigate possible "
"`timing attacks`_."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:299
msgid "The Factory"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:301
msgid ""
"You have created a custom token, custom listener, and custom provider. Now "
"you need to tie them all together. How do you make a unique provider "
"available for every firewall? The answer is by using a *factory*. A factory "
"is where you hook into the Security component, telling it the name of your "
"provider and any configuration options available for it. First, you must "
"create a class which implements "
":class:`Symfony\\\\Bundle\\\\SecurityBundle\\\\DependencyInjection\\\\Security\\\\Factory\\\\SecurityFactoryInterface`."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:351
msgid ""
"The "
":class:`Symfony\\\\Bundle\\\\SecurityBundle\\\\DependencyInjection\\\\Security\\\\Factory\\\\SecurityFactoryInterface`"
" requires the following methods:"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:356
msgid "``create``"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:355
msgid ""
"Method which adds the listener and authentication provider to the DI "
"container for the appropriate security context."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:360
msgid "``getPosition``"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:359
msgid ""
"Method which must be of type ``pre_auth``, ``form``, ``http``, and "
"``remember_me`` and defines the position at which the provider is called."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:364
msgid "``getKey``"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:363
msgid ""
"Method which defines the configuration key used to reference the provider in"
" the firewall configuration."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:369
msgid "``addConfiguration``"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:367
msgid ""
"Method which is used to define the configuration options underneath the "
"configuration key in your security configuration. Setting configuration "
"options are explained later in this chapter."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:373
msgid ""
"A class not used in this example, "
":class:`Symfony\\\\Bundle\\\\SecurityBundle\\\\DependencyInjection\\\\Security\\\\Factory\\\\AbstractFactory`,"
" is a very useful base class which provides commonly needed functionality "
"for security factories. It may be useful when defining an authentication "
"provider of a different type."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:379
msgid ""
"Now that you have created a factory class, the ``wsse`` key can be used as a"
" firewall in your security configuration."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:384
msgid ""
"You may be wondering \"why do you need a special factory class to add "
"listeners and providers to the dependency injection container?\". This is a "
"very good question. The reason is you can use your firewall multiple times, "
"to secure multiple parts of your application. Because of this, each time "
"your firewall is used, a new service is created in the DI container. The "
"factory is what creates these new services."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:392
#: ../../cookbook/security/custom_authentication_provider.rst:528
msgid "Configuration"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:394
msgid ""
"It's time to see your authentication provider in action. You will need to do"
" a few things in order to make this work. The first thing is to add the "
"services above to the DI container. Your factory class above makes reference"
" to service ids that do not exist yet: "
"``wsse.security.authentication.provider`` and "
"``wsse.security.authentication.listener``. It's time to define those "
"services."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:460
msgid ""
"Now that your services are defined, tell your security context about your "
"factory in your bundle class:"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:483
msgid ""
"You are finished! You can now define parts of your app as under WSSE "
"protection."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:517
msgid ""
"Congratulations! You have written your very own custom security "
"authentication provider!"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:521
msgid "A little Extra"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:523
msgid ""
"How about making your WSSE authentication provider a bit more exciting? The "
"possibilities are endless. Why don't you start by adding some sparkle to "
"that shine?"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:530
msgid ""
"You can add custom options under the ``wsse`` key in your security "
"configuration. For instance, the time allowed before expiring the "
"``Created`` header item, by default, is 5 minutes. Make this configurable, "
"so different firewalls can have different timeout lengths."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:535
msgid ""
"You will first need to edit ``WsseFactory`` and define the new option in the"
" ``addConfiguration`` method."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:553
msgid ""
"Now, in the ``create`` method of the factory, the ``$config`` argument will "
"contain a ``lifetime`` key, set to 5 minutes (300 seconds) unless otherwise "
"set in the configuration. Pass this argument to your authentication provider"
" in order to put it to use."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:578
msgid ""
"You'll also need to add a third argument to the "
"``wsse.security.authentication.provider`` service configuration, which can "
"be blank, but will be filled in with the lifetime in the factory. The "
"``WsseProvider`` class will also now need to accept a third constructor "
"argument - the lifetime - which it should use instead of the hard-coded 300 "
"seconds. These two steps are not shown here."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:585
msgid ""
"The lifetime of each WSSE request is now configurable, and can be set to any"
" desirable value per firewall."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:624
msgid ""
"The rest is up to you! Any relevant configuration items can be defined in "
"the factory and consumed or passed to the other classes in the container."
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:1
msgid "Security"
msgstr ""

#: ../../cookbook/security/custom_authentication_provider.rst:1
msgid "Custom authentication provider"
msgstr ""
