# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../cookbook/workflow/new_project_svn.rst:7
msgid "How to Create and Store a Symfony Project in Subversion"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:11
msgid ""
"This entry is specifically about Subversion, and based on principles found "
"in :doc:`/cookbook/workflow/new_project_git`."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:14
msgid ""
"Once you've read through :doc:`/book/page_creation` and become familiar with"
" using Symfony, you'll no-doubt be ready to start your own project. The "
"preferred method to manage Symfony projects is using `Git`_ but some prefer "
"to use `Subversion`_ which is totally fine!. In this cookbook article, "
"you'll learn how to manage your project using `SVN`_ in a similar manner you"
" would do with `Git`_."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:23
msgid ""
"This is **a** method to tracking your Symfony project in a Subversion "
"repository. There are several ways to do and this one is simply one that "
"works."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:28
msgid "The Subversion Repository"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:30
msgid ""
"For this article it's assumed that your repository layout follows the "
"widespread standard structure:"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:42
msgid ""
"Most Subversion hosting should follow this standard practice. This is the "
"recommended layout in `Version Control with Subversion`_ and the layout used"
" by most free hosting (see :ref:`svn-hosting`)."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:47
msgid "Initial Project Setup"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:49
msgid ""
"To get started, you'll need to download Symfony and get the basic Subversion"
" setup. First, download and get your Symfony project running by following "
"the :doc:`Installation </book/installation>` chapter."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:53
msgid ""
"Once you have your new project directory and things are working, follow "
"along with these steps:"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:56
msgid ""
"Checkout the Subversion repository that will host this project. Suppose it "
"is hosted on `Google code`_ and called ``myproject``:"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:63
msgid "Copy the Symfony project files in the Subversion folder:"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:69
msgid ""
"Now, set the ignore rules. Not everything *should* be stored in your "
"Subversion repository. Some files (like the cache) are generated and others "
"(like the database configuration) are meant to be customized on each "
"machine. This makes use of the ``svn:ignore`` property, so that specific "
"files can be ignored."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:90
msgid "The rest of the files can now be added and committed to the project:"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:97
msgid ""
"That's it! Since the ``app/config/parameters.yml`` file is ignored, you can "
"store machine-specific settings like database passwords here without "
"committing them. The ``parameters.yml.dist`` file *is* committed, but is not"
" read by Symfony. And by adding any new keys you need to both files, new "
"developers can quickly clone the project, copy this file to "
"``parameters.yml``, customize it, and start developing."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:104
msgid ""
"At this point, you have a fully-functional Symfony project stored in your "
"Subversion repository. The development can start with commits in the "
"Subversion repository."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:108
msgid ""
"You can continue to follow along with the :doc:`/book/page_creation` chapter"
" to learn more about how to configure and develop inside your application."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:113
msgid ""
"The Symfony Standard Edition comes with some example functionality. To "
"remove the sample code, follow the instructions in the "
"\":doc:`/cookbook/bundles/remove`\" article."
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:2
msgid "Managing Vendor Libraries with ``composer.json``"
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:5
msgid "How Does it Work?"
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:7
msgid ""
"Every Symfony project uses a group of third-party \"vendor\" libraries. One "
"way or another the goal is to download these files into your ``vendor/`` "
"directory and, ideally, to give you some sane way to manage the exact "
"version you need for each."
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:12
msgid ""
"By default, these libraries are downloaded by running a ``composer install``"
" \"downloader\" binary. This ``composer`` file is from a library called "
"`Composer`_ and you can read more about installing it in the "
":ref:`Installation <installation-updating-vendors>` chapter."
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:17
msgid ""
"The ``composer`` command reads from the ``composer.json`` file at the root "
"of your project. This is an JSON-formatted file, which holds a list of each "
"of the external packages you need, the version to be downloaded and more. "
"``composer`` also reads from a ``composer.lock`` file, which allows you to "
"pin each library to an **exact** version. In fact, if a ``composer.lock`` "
"file exists, the versions inside will override those in ``composer.json``. "
"To upgrade your libraries to new versions, run ``composer update``."
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:27
msgid ""
"If you want to add a new package to your application, run the composer "
"``require`` command:"
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:34
msgid "To learn more about Composer, see `GetComposer.org`_:"
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:36
msgid ""
"It's important to realize that these vendor libraries are *not* actually "
"part of *your* repository. Instead, they're simply un-tracked files that are"
" downloaded into the ``vendor/``. But since all the information needed to "
"download these files is saved in ``composer.json`` and ``composer.lock`` "
"(which *are* stored in the repository), any other developer can use the "
"project, run ``composer install``, and download the exact same set of vendor"
" libraries. This means that you're controlling exactly what each vendor "
"library looks like, without needing to actually commit them to *your* "
"repository."
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:45
msgid ""
"So, whenever a developer uses your project, they should run the ``composer "
"install`` script to ensure that all of the needed vendor libraries are "
"downloaded."
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:0
msgid "Upgrading Symfony"
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:50
msgid ""
"Since Symfony is just a group of third-party libraries and third-party "
"libraries are entirely controlled through ``composer.json`` and "
"``composer.lock``, upgrading Symfony means simply upgrading each of these "
"files to match their state in the latest Symfony Standard Edition."
msgstr ""

#: ../../cookbook/workflow/_vendor_deps.rst.inc:55
msgid ""
"Of course, if you've added new entries to ``composer.json``, be sure to "
"replace only the original parts (i.e. be sure not to also delete any of your"
" custom entries)."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:122
msgid "Subversion Hosting Solutions"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:124
msgid ""
"The biggest difference between `Git`_ and `SVN`_ is that Subversion *needs* "
"a central repository to work. You then have several solutions:"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:127
msgid ""
"Self hosting: create your own repository and access it either through the "
"filesystem or the network. To help in this task you can read `Version "
"Control with Subversion`_."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:131
msgid ""
"Third party hosting: there are a lot of serious free hosting solutions "
"available like `GitHub`_, `Google code`_, `SourceForge`_ or `Gna`_. Some of "
"them offer Git hosting as well."
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:1
msgid "Workflow"
msgstr ""

#: ../../cookbook/workflow/new_project_svn.rst:1
msgid "Subversion"
msgstr ""
