# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../cookbook/deployment/heroku.rst:5
#: ../../cookbook/deployment/heroku.rst:1
msgid "Deploying to Heroku Cloud"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:7
msgid ""
"This step by step cookbook describes how to deploy a Symfony web application"
" to the Heroku cloud platform. Its contents are based on `the original "
"article`_ published by Heroku."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:12
msgid "Setting up"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:14
msgid ""
"To setup a new Heroku website, first `signup with Heroku`_ or sign in with "
"your credentials. Then download and install the `Heroku Toolbelt`_ on your "
"local computer."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:18
msgid ""
"You can also check out the `getting Started with PHP on Heroku`_ guide to "
"gain more familiarity with the specifics of working with PHP applications on"
" Heroku."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:22
msgid "Preparing your Application"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:24
msgid ""
"Deploying a Symfony application to Heroku doesn't require any change in its "
"code, but it requires some minor tweaks to its configuration."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:27
msgid ""
"By default, the Symfony app will log into your application's ``app/log/`` "
"directory. This is not ideal as Heroku uses an `ephemeral file system`_. On "
"Heroku, the best way to handle logging is using `Logplex`_. And the best way"
" to send log data to Logplex is by writing to ``STDERR`` or ``STDOUT``. "
"Luckily, Symfony uses the excellent Monolog library for logging. So, a new "
"log destination is just a change to a config file away."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:34
msgid ""
"Open the ``app/config/config_prod.yml`` file, locate the "
"``monolog/handlers/nested``  section (or create it if it doesn't exist yet) "
"and change the value of ``path`` from "
"``\"%kernel.logs_dir%/%kernel.environment%.log\"`` to ``\"php://stderr\"``:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:50
msgid ""
"Once the application is deployed, run ``heroku logs --tail`` to keep the "
"stream of logs from Heroku open in your terminal."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:54
msgid "Creating a new Application on Heroku"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:56
msgid ""
"To create a new Heroku application that you can push to, use the CLI "
"``create`` command:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:67
msgid ""
"You are now ready to deploy the application as explained in the next "
"section."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:70
msgid "Deploying your Application on Heroku"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:72
msgid ""
"Before your first deploy, you need to do just three more things, which are "
"explained below:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:75
msgid ":ref:`Create a Procfile <heroku-procfile>`"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:77
msgid ":ref:`Set the Environment to prod <heroku-setting-env-to-prod>`"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:79
msgid ":ref:`Push your Code to Heroku <heroku-push-code>`"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:85
msgid "1) Create a Procfile"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:87
msgid ""
"By default, Heroku will launch an Apache web server together with PHP to "
"serve applications. However, two special circumstances apply to Symfony "
"applications:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:90
msgid ""
"The document root is in the ``web/`` directory and not in the root directory"
" of the application;"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:92
msgid ""
"The Composer ``bin-dir``, where vendor binaries (and thus Heroku's own boot "
"scripts) are placed, is ``bin/`` , and not the default ``vendor/bin``."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:97
msgid ""
"Vendor binaries are usually installed to ``vendor/bin`` by Composer, but "
"sometimes (e.g. when running a Symfony Standard Edition project!), the "
"location will be different. If in doubt, you can always run ``composer "
"config bin-dir`` to figure out the right location."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:102
msgid ""
"Create a new file called ``Procfile`` (without any extension) at the root "
"directory of the application and add just the following content:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:109
msgid ""
"If you prefer working on the command console, execute the following commands"
" to create the ``Procfile`` file and to add it to the repository:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:124
msgid "2) Set the Environment to prod"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:126
msgid ""
"During a deploy, Heroku runs ``composer install --no-dev`` to install all of"
" the dependencies your application requires. However, typical `post-install-"
"commands`_ in ``composer.json``, e.g. to install assets or clear (or pre-"
"warm) caches, run using Symfony's ``dev`` environment by default."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:131
msgid ""
"This is clearly not what you want - the app runs in \"production\" (even if "
"you use it just for an experiment, or as a staging environment), and so any "
"build steps should use the same ``prod`` environment as well."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:135
msgid ""
"Thankfully, the solution to this problem is very simple: Symfony will pick "
"up an environment variable named ``SYMFONY_ENV`` and use that environment if"
" nothing else is explicitly set. As Heroku exposes all `config vars`_ as "
"environment variables, you can issue a single command to prepare your app "
"for a deployment:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:148
msgid "3) Push your Code to Heroku"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:150
msgid ""
"Next up, it's finally time to deploy your application to Heroku. If you are "
"doing this for the very first time, you may see a message such as the "
"following:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:159
msgid ""
"In this case, you need to confirm by typing ``yes`` and hitting ``<Enter>`` "
"key - ideally after you've `verified that the RSA key fingerprint is "
"correct`_."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:162
msgid "Then, deploy your application executing this command:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:212
msgid ""
"And that's it! If you now open your browser, either by manually pointing it "
"to the URL ``heroku create`` gave you, or by using the Heroku Toolbelt, the "
"application will respond:"
msgstr ""

#: ../../cookbook/deployment/heroku.rst:221
msgid "You should be seeing your Symfony application in your browser."
msgstr ""

#: ../../cookbook/deployment/heroku.rst:1
msgid "Deployment"
msgstr ""
