# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../cookbook/form/create_form_type_extension.rst:5
msgid "How to Create a Form Type Extension"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:7
msgid ""
":doc:`Custom form field types <create_custom_field_type>` are great when you"
" need field types with a specific purpose, such as a gender selector, or a "
"VAT number input."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:11
msgid ""
"But sometimes, you don't really need to add new field types - you want to "
"add features on top of existing types. This is where form type extensions "
"come in."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:15
msgid "Form type extensions have 2 main use-cases:"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:17
msgid ""
"You want to add a **generic feature to several types** (such as adding a "
"\"help\" text to every field type);"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:19
msgid ""
"You want to add a **specific feature to a single type** (such as adding a "
"\"download\" feature to the \"file\" field type)."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:22
msgid ""
"In both those cases, it might be possible to achieve your goal with custom "
"form rendering, or custom form field types. But using form type extensions "
"can be cleaner (by limiting the amount of business logic in templates) and "
"more flexible (you can add several type extensions to a single form type)."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:28
msgid ""
"Form type extensions can achieve most of what custom field types can do, but"
" instead of being field types of their own, **they plug into existing "
"types**."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:31
msgid ""
"Imagine that you manage a ``Media`` entity, and that each media is "
"associated to a file. Your ``Media`` form uses a file type, but when editing"
" the entity, you would like to see its image automatically rendered next to "
"the file input."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:36
msgid ""
"You could of course do this by customizing how this field is rendered in a "
"template. But field type extensions allow you to do this in a nice DRY "
"fashion."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:40
msgid "Defining the Form Type Extension"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:42
msgid ""
"Your first task will be to create the form type extension class (called "
"``ImageTypeExtension`` in this article). By standard, form extensions "
"usually live in the ``Form\\Extension`` directory of one of your bundles."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:46
msgid ""
"When creating a form type extension, you can either implement the "
":class:`Symfony\\\\Component\\\\Form\\\\FormTypeExtensionInterface` "
"interface or extend the "
":class:`Symfony\\\\Component\\\\Form\\\\AbstractTypeExtension` class. In "
"most cases, it's easier to extend the abstract class::"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:69
msgid ""
"The only method you **must** implement is the ``getExtendedType`` function. "
"It is used to indicate the name of the form type that will be extended by "
"your extension."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:75
msgid ""
"The value you return in the ``getExtendedType`` method corresponds to the "
"value returned by the ``getName`` method in the form type class you wish to "
"extend."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:79
msgid ""
"In addition to the ``getExtendedType`` function, you will probably want to "
"override one of the following methods:"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:82
msgid "``buildForm()``"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:84
msgid "``buildView()``"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:86
msgid "``configureOptions()``"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:88
msgid "``finishView()``"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:90
msgid ""
"For more information on what those methods do, you can refer to the "
":doc:`Creating Custom Field Types </cookbook/form/create_custom_field_type>`"
" cookbook article."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:95
msgid "Registering your Form Type Extension as a Service"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:97
msgid ""
"The next step is to make Symfony aware of your extension. All you need to do"
" is to declare it as a service by using the ``form.type_extension`` tag:"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:128
msgid ""
"The ``alias`` key of the tag is the type of field that this extension should"
" be applied to. In your case, as you want to extend the ``file`` field type,"
" you will use ``file`` as an alias."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:133
msgid "Adding the extension Business Logic"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:135
msgid ""
"The goal of your extension is to display nice images next to file inputs "
"(when the underlying model contains images). For that purpose, suppose that "
"you use an approach similar to the one described in :doc:`How to handle File"
" Uploads with Doctrine </cookbook/doctrine/file_uploads>`: you have a Media "
"model with a file property (corresponding to the file field in the form) and"
" a path property (corresponding to the image path in the database)::"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:178
msgid ""
"Your form type extension class will need to do two things in order to extend"
" the ``file`` form type:"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:181
msgid ""
"Override the ``configureOptions`` method in order to add an ``image_path`` "
"option;"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:183
msgid ""
"Override the ``buildForm`` and ``buildView`` methods in order to pass the "
"image URL to the view."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:186
msgid ""
"The logic is the following: when adding a form field of type ``file``, you "
"will be able to specify a new option: ``image_path``. This option will tell "
"the file field how to get the actual image URL in order to display it in the"
" view::"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:249
msgid "Override the File Widget Template Fragment"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:251
msgid ""
"Each field type is rendered by a template fragment. Those template fragments"
" can be overridden in order to customize form rendering. For more "
"information, you can refer to the :ref:`cookbook-form-customization-form-"
"themes` article."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:255
msgid ""
"In your extension class, you have added a new variable (``image_url``), but "
"you still need to take advantage of this new variable in your templates. "
"Specifically, you need to override the ``file_widget`` block:"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:287
msgid ""
"You will need to change your config file or explicitly specify how you want "
"your form to be themed in order for Symfony to use your overridden block. "
"See :ref:`cookbook-form-customization-form-themes` for more information."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:293
msgid "Using the Form Type Extension"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:295
msgid ""
"From now on, when adding a field of type ``file`` in your form, you can "
"specify an ``image_path`` option that will be used to display an image next "
"to the file field. For example::"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:320
msgid ""
"When displaying the form, if the underlying model has already been "
"associated with an image, you will see it displayed next to the file input."
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:1
msgid "Form"
msgstr ""

#: ../../cookbook/form/create_form_type_extension.rst:1
msgid "Form type extension"
msgstr ""
