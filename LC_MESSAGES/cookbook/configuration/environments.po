# 
msgid ""
msgstr ""
"Project-Id-Version: Symfony Framework Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-24 10:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../cookbook/configuration/environments.rst:5
msgid "How to Master and Create new Environments"
msgstr "如何掌握和创建新的运行环境"

#: ../../cookbook/configuration/environments.rst:7
msgid ""
"Every application is the combination of code and a set of configuration that"
" dictates how that code should function. The configuration may define the "
"database being used, whether or not something should be cached, or how "
"verbose logging should be. In Symfony, the idea of \"environments\" is the "
"idea that the same codebase can be run using multiple different "
"configurations. For example, the ``dev`` environment should use "
"configuration that makes development easy and friendly, while the ``prod`` "
"environment should use a set of configuration optimized for speed."
msgstr ""

#: ../../cookbook/configuration/environments.rst:20
msgid "Different Environments, different Configuration Files"
msgstr ""

#: ../../cookbook/configuration/environments.rst:22
msgid ""
"A typical Symfony application begins with three environments: ``dev``, "
"``prod``, and ``test``. As discussed, each \"environment\" simply represents"
" a way to execute the same codebase with different configuration. It should "
"be no surprise then that each environment loads its own individual "
"configuration file. If you're using the YAML configuration format, the "
"following files are used:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:29
msgid "for the ``dev`` environment: ``app/config/config_dev.yml``"
msgstr ""

#: ../../cookbook/configuration/environments.rst:30
msgid "for the ``prod`` environment: ``app/config/config_prod.yml``"
msgstr ""

#: ../../cookbook/configuration/environments.rst:31
msgid "for the ``test`` environment: ``app/config/config_test.yml``"
msgstr ""

#: ../../cookbook/configuration/environments.rst:33
msgid ""
"This works via a simple standard that's used by default inside the "
"``AppKernel`` class:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:52
msgid ""
"As you can see, when Symfony is loaded, it uses the given environment to "
"determine which configuration file to load. This accomplishes the goal of "
"multiple environments in an elegant, powerful and transparent way."
msgstr ""

#: ../../cookbook/configuration/environments.rst:56
msgid ""
"Of course, in reality, each environment differs only somewhat from others. "
"Generally, all environments will share a large base of common configuration."
" Opening the \"dev\" configuration file, you can see how this is "
"accomplished easily and transparently:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:84
msgid ""
"To share common configuration, each environment's configuration file simply "
"first imports from a central configuration file (``config.yml``). The "
"remainder of the file can then deviate from the default configuration by "
"overriding individual parameters. For example, by default, the "
"``web_profiler`` toolbar is disabled. However, in the ``dev`` environment, "
"the toolbar is activated by modifying the default value in the ``dev`` "
"configuration file:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:127
msgid "Executing an Application in different Environments"
msgstr ""

#: ../../cookbook/configuration/environments.rst:129
msgid ""
"To execute the application in each environment, load up the application "
"using either the ``app.php`` (for the ``prod`` environment) or the "
"``app_dev.php`` (for the ``dev`` environment) front controller:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:140
msgid ""
"The given URLs assume that your web server is configured to use the ``web/``"
" directory of the application as its root. Read more in :doc:`Installing "
"Symfony </book/installation>`."
msgstr ""

#: ../../cookbook/configuration/environments.rst:144
msgid ""
"If you open up one of these files, you'll quickly see that the environment "
"used by each is explicitly set::"
msgstr ""

#: ../../cookbook/configuration/environments.rst:154
msgid ""
"As you can see, the ``prod`` key specifies that this application will run in"
" the ``prod`` environment. A Symfony application can be executed in any "
"environment by using this code and changing the environment string."
msgstr ""

#: ../../cookbook/configuration/environments.rst:160
msgid ""
"The ``test`` environment is used when writing functional tests and is not "
"accessible in the browser directly via a front controller. In other words, "
"unlike the other environments, there is no ``app_test.php`` front controller"
" file."
msgstr ""

#: ../../cookbook/configuration/environments.rst:0
msgid "*Debug* Mode"
msgstr ""

#: ../../cookbook/configuration/environments.rst:170
msgid ""
"Important, but unrelated to the topic of *environments* is the ``false`` "
"argument as the second argument to the ``AppKernel`` constructor. This "
"specifies whether or not the application should run in \"debug mode\". "
"Regardless of the environment, a Symfony application can be run with debug "
"mode set to ``true`` or ``false``. This affects many things in the "
"application, such as whether or not errors should be displayed or if cache "
"files are dynamically rebuilt on each request. Though not a requirement, "
"debug mode is generally set to ``true`` for the ``dev`` and ``test`` "
"environments and ``false`` for the ``prod`` environment."
msgstr ""

#: ../../cookbook/configuration/environments.rst:180
msgid ""
"Internally, the value of the debug mode becomes the ``kernel.debug`` "
"parameter used inside the :doc:`service container "
"</book/service_container>`. If you look inside the application configuration"
" file, you'll see the parameter used, for example, to turn logging on or off"
" when using the Doctrine DBAL:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:209
msgid ""
"As of Symfony 2.3, showing errors or not no longer depends on the debug "
"mode. You'll need to enable that in your front controller by calling "
":method:`Symfony\\\\Component\\\\Debug\\\\Debug::enable`."
msgstr ""

#: ../../cookbook/configuration/environments.rst:214
msgid "Selecting the Environment for Console Commands"
msgstr ""

#: ../../cookbook/configuration/environments.rst:216
msgid ""
"By default, Symfony commands are executed in the ``dev`` environment and "
"with the debug mode enabled. Use the ``--env`` and ``--no-debug`` options to"
" modify this behavior:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:231
msgid ""
"In addition to the ``--env`` and ``--debug`` options, the behavior of "
"Symfony commands can also be controlled with environment variables. The "
"Symfony console application checks the existence and value of these "
"environment variables before executing any command:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:237
msgid "``SYMFONY_ENV``"
msgstr ""

#: ../../cookbook/configuration/environments.rst:237
msgid ""
"Sets the execution environment of the command to the value of this variable "
"(``dev``, ``prod``, ``test``, etc.);"
msgstr ""

#: ../../cookbook/configuration/environments.rst:240
msgid "``SYMFONY_DEBUG``"
msgstr ""

#: ../../cookbook/configuration/environments.rst:240
msgid "If ``0``, debug mode is disabled. Otherwise, debug mode is enabled."
msgstr ""

#: ../../cookbook/configuration/environments.rst:242
msgid ""
"These environment variables are very useful for production servers because "
"they allow you to ensure that commands always run in the ``prod`` "
"environment without having to add any command option."
msgstr ""

#: ../../cookbook/configuration/environments.rst:250
msgid "Creating a new Environment"
msgstr ""

#: ../../cookbook/configuration/environments.rst:252
msgid ""
"By default, a Symfony application has three environments that handle most "
"cases. Of course, since an environment is nothing more than a string that "
"corresponds to a set of configuration, creating a new environment is quite "
"easy."
msgstr ""

#: ../../cookbook/configuration/environments.rst:257
msgid ""
"Suppose, for example, that before deployment, you need to benchmark your "
"application. One way to benchmark the application is to use near-production "
"settings, but with Symfony's ``web_profiler`` enabled. This allows Symfony "
"to record information about your application while benchmarking."
msgstr ""

#: ../../cookbook/configuration/environments.rst:262
msgid ""
"The best way to accomplish this is via a new environment called, for "
"example, ``benchmark``. Start by creating a new configuration file:"
msgstr ""

#: ../../components/dependency_injection/_imports-parameters-note.rst.inc:3
msgid ""
"Due to the way in which parameters are resolved, you cannot use them to "
"build paths in imports dynamically. This means that something like the "
"following doesn't work:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:298
msgid ""
"And with this simple addition, the application now supports a new "
"environment called ``benchmark``."
msgstr ""

#: ../../cookbook/configuration/environments.rst:301
msgid ""
"This new configuration file imports the configuration from the ``prod`` "
"environment and modifies it. This guarantees that the new environment is "
"identical to the ``prod`` environment, except for any changes explicitly "
"made here."
msgstr ""

#: ../../cookbook/configuration/environments.rst:305
msgid ""
"Because you'll want this environment to be accessible via a browser, you "
"should also create a front controller for it. Copy the ``web/app.php`` file "
"to ``web/app_benchmark.php`` and edit the environment to be ``benchmark``::"
msgstr ""

#: ../../cookbook/configuration/environments.rst:317
msgid "The new environment is now accessible via::"
msgstr ""

#: ../../cookbook/configuration/environments.rst:323
msgid ""
"Some environments, like the ``dev`` environment, are never meant to be "
"accessed on any deployed server by the general public. This is because "
"certain environments, for debugging purposes, may give too much information "
"about the application or underlying infrastructure. To be sure these "
"environments aren't accessible, the front controller is usually protected "
"from external IP addresses via the following code at the top of the "
"controller:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:340
msgid "Environments and the Cache Directory"
msgstr ""

#: ../../cookbook/configuration/environments.rst:342
msgid ""
"Symfony takes advantage of caching in many ways: the application "
"configuration, routing configuration, Twig templates and more are cached to "
"PHP objects stored in files on the filesystem."
msgstr ""

#: ../../cookbook/configuration/environments.rst:346
msgid ""
"By default, these cached files are largely stored in the ``app/cache`` "
"directory. However, each environment caches its own set of files:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:358
msgid ""
"Sometimes, when debugging, it may be helpful to inspect a cached file to "
"understand how something is working. When doing so, remember to look in the "
"directory of the environment you're using (most commonly ``dev`` while "
"developing and debugging). While it can vary, the ``app/cache/dev`` "
"directory includes the following:"
msgstr ""

#: ../../cookbook/configuration/environments.rst:364
msgid ""
"``appDevDebugProjectContainer.php`` - the cached \"service container\" that "
"represents the cached application configuration;"
msgstr ""

#: ../../cookbook/configuration/environments.rst:367
msgid ""
"``appDevUrlGenerator.php`` - the PHP class generated from the routing "
"configuration and used when generating URLs;"
msgstr ""

#: ../../cookbook/configuration/environments.rst:370
msgid ""
"``appDevUrlMatcher.php`` - the PHP class used for route matching - look here"
" to see the compiled regular expression logic used to match incoming URLs to"
" different routes;"
msgstr ""

#: ../../cookbook/configuration/environments.rst:374
msgid "``twig/`` - this directory contains all the cached Twig templates."
msgstr ""

#: ../../cookbook/configuration/environments.rst:378
msgid ""
"You can easily change the directory location and name. For more information "
"read the article :doc:`/cookbook/configuration/override_dir_structure`."
msgstr ""

#: ../../cookbook/configuration/environments.rst:382
msgid "Going further"
msgstr ""

#: ../../cookbook/configuration/environments.rst:384
msgid ""
"Read the article on :doc:`/cookbook/configuration/external_parameters`."
msgstr ""

#: ../../cookbook/configuration/environments.rst:1
#: ../../cookbook/configuration/environments.rst:16
#: ../../cookbook/configuration/environments.rst:123
#: ../../cookbook/configuration/environments.rst:246
#: ../../cookbook/configuration/environments.rst:336
msgid "Environments"
msgstr ""

#: ../../cookbook/configuration/environments.rst:16
msgid "Configuration files"
msgstr ""

#: ../../cookbook/configuration/environments.rst:123
msgid "Executing different environments"
msgstr ""

#: ../../cookbook/configuration/environments.rst:165
msgid "Configuration"
msgstr ""

#: ../../cookbook/configuration/environments.rst:165
msgid "Debug mode"
msgstr ""

#: ../../cookbook/configuration/environments.rst:246
msgid "Creating a new environment"
msgstr ""

#: ../../cookbook/configuration/environments.rst:336
msgid "Cache directory"
msgstr ""
